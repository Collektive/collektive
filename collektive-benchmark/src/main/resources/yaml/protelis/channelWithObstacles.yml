incarnation: protelis

network-model:
  type: ConnectWithinDistance
  parameters: [7]

_pool: &program
  - time-distribution: 1
    program: |
      module protelis:channelWithObstacle
      import protelis:coord:spreading
      channelWithObstacle(env.get("source"), env.get("target"), env.get("obstacle"), 0.5)
  - program: send

deployments:
  - type: Grid
    parameters: [ 0, 0, 200, 200, 7, 7]
    programs:
      - *program
    contents:
      - molecule: obstacle
        concentration: false
      - molecule: source
        concentration: false
      - molecule: target
        concentration: false
      - in: { type: Rectangle, parameters: [ 84, 36, 10, 170 ] }
        molecule: obstacle
        concentration: true
      - in: { type: Rectangle, parameters: [ 0, 103, 170, 10 ] }
        molecule: obstacle
        concentration: true
  - type: Point
    parameters: [3, 3]
    programs:
      - *program
    contents:
      - molecule: source
        concentration: true
      - molecule: target
        concentration: false
      - molecule: obstacle
        concentration: false
  - type: Point
    parameters: [193, 193]
    programs:
      - *program
    contents:
      - molecule: target
        concentration: true
      - molecule: source
        concentration: false
      - molecule: obstacle
        concentration: false
