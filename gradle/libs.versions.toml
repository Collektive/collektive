[versions]
alchemist = "42.1.0"
arrow = "2.0.1"
build-config = "5.6.5"
dokka = "2.0.0"
kotest = "6.0.0.M2"
kotlin = "2.1.20"
serialization = "1.8.1"

[libraries]
alchemist = { module = "it.unibo.alchemist:alchemist", version.ref = "alchemist" }
alchemist-api = { module = "it.unibo.alchemist:alchemist-api", version.ref = "alchemist" }
alchemist-euclidean-geometry = { module = "it.unibo.alchemist:alchemist-euclidean-geometry", version.ref = "alchemist" }
arrow-core = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
arrow-core-serialization = { module = "io.arrow-kt:arrow-core-serialization", version.ref = "arrow" }
caffeine = "com.github.ben-manes.caffeine:caffeine:3.2.0"
hash-sha3 = "org.kotlincrypto.hash:sha3:0.7.0"
javap = "com.perfma.wrapped:com.sun.tools:1.8.0_jdk8u275-b01_linux_x64"
kotest-assertions-core = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotest-framework-engine = { module = "io.kotest:kotest-framework-engine", version.ref = "kotest" }
kotest-runner-junit5-jvm = { module = "io.kotest:kotest-runner-junit5-jvm", version.ref = "kotest" }
kotlin-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-compiler-embeddable", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-scripting-compiler-embeddable = { module = "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable", version.ref = "kotlin" }
kotlin-scripting-jvm = { module = "org.jetbrains.kotlin:kotlin-scripting-jvm", version.ref = "kotlin" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
kotlin-test-annotations-common = { module = "org.jetbrains.kotlin:kotlin-test-annotations-common", version.ref = "kotlin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlinpoet = "com.squareup:kotlinpoet:2.1.0"
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlinx-serialization-protobuf = { module = "org.jetbrains.kotlinx:kotlinx-serialization-protobuf", version.ref = "serialization" }
mockk = "io.mockk:mockk:1.14.2"
slf4j = "org.slf4j:slf4j-api:2.0.17"
subjekt = "io.github.freshmag:subjekt-api:1.1.5"

[bundles]
kotlin-compiler = [
    "kotlin-compiler-embeddable",
    "kotlin-scripting-compiler-embeddable",
    "kotlin-scripting-jvm",
]
kotlin-testing-common = [
    "kotest-assertions-core",
    "kotest-framework-engine",
    "kotlin-test",
    "kotlin-test-annotations-common",
]
alchemist = [
    "alchemist",
    "alchemist-api",
    "alchemist-euclidean-geometry",
]

[plugins]
build-config = { id = "com.github.gmazzo.buildconfig", version.ref = "build-config" }
collektivize = { id = "it.unibo.collektive.collektivize" }
dokka = { id = "org.jetbrains.dokka", version.ref = "dokka" }
gitSemVer = "org.danilopianini.git-sensitive-semantic-versioning:5.1.2"
gradlePluginPublish = { id = "com.gradle.plugin-publish", version = "1.3.1" }
kotest = { id = "io.kotest.multiplatform", version.ref = "kotest" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-power-assert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }
kotlin-qa = "org.danilopianini.gradle-kotlin-qa:0.86.1"
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
kover = "org.jetbrains.kotlinx.kover:0.9.1"
power-assert = { id = "org.jetbrains.kotlin.plugin.power-assert", version.ref = "kotlin" }
multiJvmTesting = "org.danilopianini.multi-jvm-test-plugin:3.4.1"
publishOnCentral = "org.danilopianini.publish-on-central:8.0.7"
taskTree = "com.dorongold.task-tree:4.0.1"
