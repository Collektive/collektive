name: "Unnecessary use of constructs"

config:
  codePreamble: |-
    /**
      * This file has been auto-generated with Subjekt (https://github.com/FreshMag/subjekt).
    */
    import it.unibo.collektive.aggregate.api.Aggregate
    import it.unibo.collektive.aggregate.api.neighboring
    import it.unibo.collektive.aggregate.api.exchange
    import it.unibo.collektive.aggregate.api.exchanging
    import it.unibo.collektive.aggregate.api.neighboring
    import it.unibo.collektive.aggregate.api.share
    import it.unibo.collektive.aggregate.api.sharing
    import it.unibo.collektive.aggregate.*
    import it.unibo.collektive.stdlib.collapse.*

parameters:
  - name: UNUSED_CONSTRUCT
    values:
      - |-
        evolve(initial) {
          initial
        }
      - |-
        exchange(initial) {
          neighboring(initial)
        }
      - |-
        neighboring {
        
        }
      - |-
        share(initial) {
          initial
        }
      - |-
        evolving(initial) {
          initial.yielding { 0 }
        }
      - |-
        neighboring {

        }
      - |-
        exchanging(0) { 
          val field = neighboring(0)
          field.yielding { field.mapValues { it + 1 }}
        }
      - |-
        sharing(initial) {
          initial.yielding { "Test" }
        }

  - name: CONSTRUCT_IMPLICIT
    values:
      - |-
        evolve(0) {
          it + 1
        }
      - |-
        exchange(initial) { field ->
          field.mapValues { it + 1 }
        }
      - |-
        neighboring {
          initial
        }
      - |-
        share(initial) {
          it.neighbors.values.max(0)
        }
      - |-
        evolving(initial) {
          it.yielding { 0 }
        }
      - |-
        neighboring {
          initial
        }
      - |-
        exchanging(initial) { field ->
          field.yielding { field.mapValues { it + 1 }}
        }
      - |-
        sharing(initial) {
          it.all.values.max().yielding { "Test" }
        }

  - name: CONSTRUCT_IMPLICIT_SHADOWED
    values:
      - |-
        evolve(initial) {
          listOf<Int>(initial).map { it }[0]
        }
      - |-
        exchange(initial) { 
          val field = neighboring(0)
          field.mapValues { it + 1 }
        }
      - |-
        neighboring {

        }
      - |-
        share(initial) {
          val field = neighboring(0)
          field.mapValues { it }.local.value
        }
      - |-
        evolving(initial) {
          val field = neighboring(0)
          field.mapValues { it }.local.value.yielding { 0 }
        }
      - |-
        neighboring {
        
        }
      - |-
        exchanging(initial) {
          val field = neighboring(0)
          field.mapValues { it }.yielding { field }
        }
      - |-
        sharing(initial) {
          val field = neighboring(0)
          field.mapValues { it }.local.value.yielding { "Test" }
        }

  - name: CONSTRUCT_EXPLICIT
    values:
      - |-
        evolve(0) { value ->
          value + 1
        }
      - |-
        exchange(initial) { field ->
          field.mapValues { it + 1 }
        }
      - |-
        neighboring {
          initial
        }
      - |-
        share(initial) { field ->
          field.neighbors.values.max()
        }
      - |-
        evolving(initial) { field ->
          field.yielding { 0 }
        }
      - |-
        exchanging(0) { field ->
            field.yielding { field.mapValues { it + 1 }}
        }
      - |-
        neighboring {
            initial
        }
      - |-
        sharing(initial) { field ->
            field.all.values.max().yielding { "Test" }
        }

subjects:
  - name: "UnnecessaryUse${{ prettify(UNUSED_CONSTRUCT) }}"
    code: |-
      fun Aggregate<Int>.entry() {
          val initial = 0
          ${{ UNUSED_CONSTRUCT }}
      }
    outcomes:
      warning: |-
        The '${{ UNUSED_CONSTRUCT }}' construct is not necessary for the given use case.

  - name: "NecessaryUseImplicitParameter${{ prettify(CONSTRUCT_IMPLICIT) }}"
    code: |-
      fun Aggregate<Int>.entry() {
          val initial = 0
          ${{ CONSTRUCT_IMPLICIT }}
      }

  - name: "UnnecessaryUseShadowedImplicitParameter${{ prettify(CONSTRUCT_IMPLICIT_SHADOWED) }}"
    code: |-
      fun Aggregate<Int>.entry() {
          val initial = 0
          ${{ CONSTRUCT_IMPLICIT_SHADOWED }}
      }
    outcomes:
      warning: |-
        The '${{ CONSTRUCT_IMPLICIT_SHADOWED }}' construct is not necessary for the given use case.

  - name: "NecessaryUseExplicitParameter${{ prettify(CONSTRUCT_EXPLICIT) }}"
    code: |-
      fun Aggregate<Int>.entry() {
          val initial = 0
          ${{ CONSTRUCT_EXPLICIT }}
      }