name: CI/CD Pipeline

on:
  workflow_call:
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-2022, macos-14, ubuntu-24.04 ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Find if secrets are available
        id: detect-secrets
        uses: DanySK/are-secrets-available@1.0.0
        with:
          secrets: ${{ toJson(secrets) }}
      - name: Set run-with-secrets condition
        id: require-secrets
        run: |
          echo "run-with-secrets=${{ steps.detect-secrets.outputs.has-secrets == 'true' && !github.event.repository.fork }}" >> $GITHUB_OUTPUT
      - name: Checkout
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Determine dry-run flag
        id: check_branch
        shell: bash
        run: |
          ruby << 'RUBY' >> $GITHUB_OUTPUT
            branch = ENV['GITHUB_REF'].sub(/^refs\/heads\//, '')
            keywords = %w[gradle kotlin publish release deploy]
            dry = keywords.any? { |kw| branch.include?(kw) } ? '' : '--dry-run'
            puts "dry_run=#{dry}"
          RUBY
      - uses: DanySK/build-check-deploy-gradle-action@4.0.7
        with:
          check-command: |
            ./gradlew check koverXmlReport :collektive-compiler-plugin:check :collektive-gradle-plugin:check :collektivize:check --parallel
          should-deploy: ${{ runner.os == 'macOS' && steps.detect-secrets.outputs.has-secrets == 'true' }} # Deploy from macOS since it supports all the platforms
          deploy-command: |
            # Compute all tasks to be executed
            projects=( "" ":collektive-compiler-plugin:" ":collektive-gradle-plugin:" ":collektivize:" )
            tasks=( "publishAllPublicationsToProjectLocalRepository" "zipMavenCentralPortalPublication" "releaseMavenCentralPortalPublication" )
            GRADLE_TASKS=()
            for p in "${projects[@]}"; do
              for t in "${tasks[@]}"; do
                GRADLE_TASKS+=( "$p$t" )
              done
            done
            ./gradlew "${GRADLE_TASKS[@]}" ${{ steps.check_branch.outputs.dry_run }}
          should-run-codecov: ${{ runner.os == 'Linux' }}
          codecov-directory: build/reports/kover
          codecov-token: ${{ secrets.CODECOV_TOKEN }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.GPG_PRIVATEKEY }}
          signing-password: ${{ secrets.GPG_PASSPHRASE }}
      - uses: github/codeql-action/upload-sarif@v3.30.1
        if: always() && runner.os == 'Linux'
        with:
          sarif_file: build/reports/merge.sarif

  build-website:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v5.0.0
        with:
          submodules: true
          fetch-depth: 0
      - name: Install Node
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: site/package.json
      - name: Build documentation website
        working-directory: site
        run: |
          npm install
          npm run build
      - name: Tar files
        run: tar -cvf website.tar site/build
      - name: Upload website
        uses: actions/upload-artifact@v4.6.2
        with:
          name: website-${{ github.sha }}
          path: website.tar

  release:
    needs:
      - build-website
      - build
    if: ${{ github.event_name == 'push' && github.repository == 'Collektive/collektive' }}
    runs-on: macos-14
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v5.0.0
        with:
          fetch-depth: 0
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Checkout the docs
        if: contains(github.repository, 'Collektive/collektive')
        uses: actions/checkout@v5.0.0
        with:
          path: deployed-website
          fetch-depth: 0
          persist-credentials: true
          repository: Collektive/collektive.github.io
          token: ${{ secrets.DEPLOYMENT_TOKEN }}
      - name: Download website artifact
        uses: actions/download-artifact@v5.0.0
        with:
          name: website-${{ github.sha }}
      - name: Unpack website
        run: |
          tar -xvf website.tar
          mv deployed-website/.git site/build
          git -C site/build status
      - name: Install Node
        uses: actions/setup-node@v5.0.0
        with:
          node-version-file: package.json
      - uses: DanySK/build-check-deploy-gradle-action@4.0.7
        env:
          STAGING_REPO_ID: ${{ needs.staging-repo.outputs.staging-repo-id }}
          ORG_GRADLE_PROJECT_releaseStage: true
        with:
          retries-on-failure: 1 # Fail fast during release
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          signing-key: ${{ secrets.GPG_PRIVATEKEY }}
          signing-password: ${{ secrets.GPG_PASSPHRASE }}

  success:
    runs-on: ubuntu-latest
    needs:
      - release
      - build
      - build-website
    if: >-
      ${{
        always() && (
          contains(join(needs.*.result, ','), 'failure')
          || !contains(join(needs.*.result, ','), 'cancelled')
        )
      }}
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
