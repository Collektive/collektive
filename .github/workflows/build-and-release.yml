name: CI/CD Pipeline

on:
  workflow_call:
  workflow_dispatch:

jobs:
  check-secrets:
    runs-on: ubuntu-22.04
    outputs:
      run-with-secrets: ${{ steps.require-secrets.outputs.run-with-secrets }}
    steps:
      - name: Find if secrets are available
        id: detect-secrets
        uses: DanySK/are-secrets-available@1.0.0
        with:
          secrets: ${{ toJson(secrets) }}
      - name: Set condition
        id: require-secrets
        run: |
          echo "run-with-secrets=${{ steps.detect-secrets.outputs.has-secrets == 'true' && !github.event.repository.fork }}" >> $GITHUB_OUTPUT

  staging-repo:
    runs-on: ubuntu-22.04
    needs:
      - check-secrets
    concurrency:
      group: staging-repo
    if: ${{ needs.check-secrets.outputs.run-with-secrets == 'true' }}
    outputs:
      maven-central-repo-id: ${{ steps.staging-repo.outputs.MavenCentral }}
      next-version: ${{ steps.compute-next-version.outputs.next-version }}
      will-release: ${{ steps.compute-next-version.outputs.will-release }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - name: Compute next release version
        id: compute-next-version
        uses: nicolasfara/precompute-semantic-release-version-action@1.0.2
        with:
          github-token: ${{ github.token }}
      - uses: DanySK/build-check-deploy-gradle-action@2.4.5
        with:
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          should-run-codecov: false
          should-deploy: true
          build-command: true
          check-command: true
          deploy-command: |
            if [[ "${{ steps.compute-next-version.outputs.will-release }}" == "true" ]]; then
              ./gradlew -PforceVersion="${{ steps.compute-next-version.outputs.next-version }}" createStagingRepositoryOnMavenCentral --parallel
            else
              ./gradlew createStagingRepositoryOnMavenCentral --parallel
            fi
      - name: Save staging repository ID
        id: staging-repo
        run: |
          [[ -f build/staging-repo-ids.properties ]] || (
            echo "Staging repositories ID file not found" &&
            exit 1
          )
          REPO_IDS=$(cat build/staging-repo-ids.properties)
          echo "Staging repositories IDs:\n$REPO_IDS"
          echo $REPO_IDS >> $GITHUB_OUTPUT

  build:
    needs:
      - check-secrets
      - staging-repo
    if: ${{ always() && !contains(needs.staging-repo.result, 'failure') }}
    strategy:
      matrix:
        os: [ windows-2022, macos-12, ubuntu-22.04 ]
    runs-on: ${{ matrix.os }}
    concurrency:
      group: build-${{ github.workflow }}-${{ matrix.os }}-${{ github.event.number || github.ref }}
      cancel-in-progress: true
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
      - uses: DanySK/build-check-deploy-gradle-action@2.4.5
        with:
          # Dry-deployment
          deploy-command: |
            NEXT_VERSION="${{ needs.staging-repo.outputs.next-version }}"
            OVERRIDE_VERSION=$([[ "$NEXT_VERSION" != "" ]] && echo "-PforceVersion=$(echo $NEXT_VERSION)" || echo "")
            ./gradlew $OVERRIDE_VERSION -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} uploadAll :plugin:compiler-plugin:uploadKotlinOSSRHToMavenCentralNexus :plugin:gradle-plugin:uploadKotlinOSSRHToMavenCentralNexus --parallel
          should-run-codecov: ${{ runner.os == 'Linux' }}
          should-deploy: ${{ needs.check-secrets.outputs.run-with-secrets == 'true' }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          signing-key: ${{ secrets.GPG_PRIVATEKEY }}
          signing-password: ${{ secrets.GPG_PASSPHRASE }}

#  build-website:
#    runs-on: ubuntu-22.04
#    concurrency:
#      group: ${{ github.workflow }}-build-website-${{ github.event.number || github.ref }}
#      cancel-in-progress: true
#    steps:
#      - name: Checkout the repo
#        uses: actions/checkout@v3.5.3
#        with:
#          submodules: true
#          fetch-depth: 0
#      - uses: DanySK/build-check-deploy-gradle-action@2.2.8
#        with:
#          build-command: |
#            NEXT_VERSION="${{ needs.staging-repo.outputs.next-version }}"
#            OVERRIDE_VERSION=$([[ "$NEXT_VERSION" != "" ]] && echo "-PforceVersion=$(echo $NEXT_VERSION)" || echo "")
#            ./gradlew $OVERRIDE_VERSION hugoBuild --parallel
#          check-command: true
#          should-run-codecov: false
#          should-deploy: false
#          should-validate-wrapper: false
#      - name: Release website to Github Pages
#        if: github.event_name != 'pull_request' && github.ref == 'refs/heads/master'
#        uses: JamesIves/github-pages-deploy-action@v4.4.3
#        with:
#          BRANCH: gh-pages
#          FOLDER: build/website

  close-staging-repos:
    needs:
      - staging-repo
      - build
    runs-on: ubuntu-22.04
    concurrency:
      group: close-staging-repos
    if: ${{ needs.check-secrets.outputs.run-with-secrets == 'true' }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4.1.1
      - uses: DanySK/build-check-deploy-gradle-action@2.4.5
        with:
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          should-run-codecov: false
          should-deploy: true
          build-command: true
          check-command: true
          deploy-command: |
            ./gradlew -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} close --parallel
            if [[ "${{ needs.staging-repo.outputs.will-release }}" == "false" ]]; then
              ./gradlew -PstagingRepositoryId=${{ needs.staging-repo.outputs.maven-central-repo-id }} drop
            fi

  release:
    concurrency:
      group: release
    needs:
      - check-secrets
      - staging-repo
#      - build-website
      - build
      - close-staging-repos
    runs-on: ubuntu-22.04
    # Prevent the release job if the run is on a PR or a fork
    if: ${{ needs.check-secrets.outputs.run-with-secrets == 'true' }}
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          token: ${{ secrets.PERSONAL_TOKEN }}
      - name: Find the version of Node from package.json
        id: node-version
        run: echo "version=$(jq -r .engines.node package.json)" >> $GITHUB_OUTPUT
      - name: Install Node
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{ steps.node-version.outputs.version }}
      - uses: DanySK/build-check-deploy-gradle-action@2.4.5
        env:
          STAGING_REPO_ID: ${{ needs.staging-repo.outputs.maven-central-repo-id }}
          ORG_GRADLE_PROJECT_releaseStage: true
        with:
          build-command: true
          check-command: true
          deploy-command: |
            npm install
            npx semantic-release
          should-run-codecov: false
          should-deploy: true
          github-token: ${{ github.token }}
          maven-central-username: ${{ secrets.MAVEN_CENTRAL_USERNAME }}
          maven-central-password: ${{ secrets.MAVEN_CENTRAL_PASSWORD }}
          gradle-publish-secret: ${{ secrets.GRADLE_PUBLISH_SECRET }}
          gradle-publish-key: ${{ secrets.GRADLE_PUBLISH_KEY }}
          signing-key: ${{ secrets.GPG_PRIVATEKEY }}
          signing-password: ${{ secrets.GPG_PASSPHRASE }}

  success:
    runs-on: ubuntu-latest
    needs:
      - check-secrets
      - staging-repo
      - close-staging-repos
#      - build-website
      - release
      - build
    if: >-
      ${{
        always() && (
          contains(join(needs.*.result, ','), 'failure')
          || !contains(join(needs.*.result, ','), 'cancelled')
        )
      }}
    steps:
      - name: Verify that there were no failures
        run: ${{ !contains(join(needs.*.result, ','), 'failure') }}
